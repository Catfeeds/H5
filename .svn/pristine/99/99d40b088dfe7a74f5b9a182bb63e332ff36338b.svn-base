<!DOCTYPE html>
<html>
<link rel="stylesheet" href="__CSS__/mint-ui.css" />

<head>
    {include file="public/base" /}
    <style>
        .mint-swipe-indicator {
            background: #666666;
        }

        .mint-swipe-indicator.is-active {
            background: red;
        }

        .noshow {
            background: #ccc;
        }

        .xdtShouCun .shoucunlist {
            width: 30%;
            height: 30px;
            line-height: 30px;
            border: 1px solid #999;
            border-radius: 5px;
            overflow: hidden;
            text-align: center;
        }
        [v-cloak] {
            display: none !important;
        }
    </style>
</head>

<body>
    <div id="details" v-cloak>
        <header class="mui-bar mui-bar-nav">
            <a class="mui-icon mui-icon-left-nav mui-pull-left" href="javascript:history.back(-1)"></a>
            <h1 class="mui-title">详情</h1>
        </header>
        <div class="mui-content">
            <!--列表头-->
            <div class="list_title clear  ">
                <ul class="mui-row">
                    <li class="mui-col-sm-4 mui-col-xs-4">
                        <a href="#">商品</a>
                    </li>
                    <li class="mui-col-sm-4 mui-col-xs-4">
                        <a :href="'{:url('goods/details_page')}?id='+id">详情</a>
                    </li>
                    <li class="mui-col-sm-4 mui-col-xs-4">
                        <a :href="'{:url('goods/evaluation')}?goods_id='+id">评价</a>
                    </li>
                </ul>
            </div>
            <!--轮播-->
            <div>
                <mt-swipe :auto="4000" style="height: 300px">
                    <mt-swipe-item>
                        <img :src="thumb" width="100%" height="100%" />
                    </mt-swipe-item>
                </mt-swipe>
            </div>

            <!--产品详情-->
            <div class="goods_name">
                <p>{{goodsName}}</p>
                <p>价格：
                    <strong>￥{{goodsPrice}}</strong>
                    <span>￥{{goodsPrice}}</span>
                </p>
            </div>
            <!--产品规格-->
            <div id="mask">
                <div class="clear title">
                    <p class="fl" style="font-size: 14px; color: #333333;">产品规格</p>
                </div>
                <div class="clear xdtCaiZi">
                    <ul class="clear">
                        <p class="p_style">可选材质</p>
                        <li v-for="(item,index) in caiziList" @click="liListClick(index)" :class="{active:index == isactive}">
                            {{item.material_name}}
                        </li>
                    </ul>
                </div>
                <div class="clear xdtShouCun" v-show="ifShoucun">
                    <p class="p_style fl">{{shoucunName}}</p>
                    <div class="shoucunlist" @click="showShouCun()">{{shoucun}}</div>
                </div>
                <div class="clear xdtZhuShi">
                    <ul class="clear">
                        <p class="p_style">可选主石</p>
                        <li v-for="(item,index) in zhushiList" @click="changeshape(index)" :class="{active:index == isActive}">
                            {{item.luozuan_shape_name}} {{item.luozuan_weight}}CT
                        </li>
                    </ul>
                </div>

                <div class="clear list_04">
                    <p class="p_style">数量</p>
                    <button class="val_sel" @click="pro_num_jian">-</button>
                    <input class="val_text" type="text" v-model="goods_num" disabled>
                    <button class="val_sel" @click="pro_num_jia">+</button>
                    <!-- <p class="kucun">库存
                    <span>{{goodsStockNum}}</span>
                </p> -->
                </div>
                <div class="clear ser_num">商品编号：
                    <span>{{goodsCode}}</span>
                </div>
            </div>
            <!--产品参数-->
            <div class="Parameter">
                <p class="title">产品参数</p>
                <ul class="clear">
                    <p>产品材质:</p>
                    <li v-for="(item,index) in caiziList">{{item.material_name}}</li>
                </ul>

            </div>

            <div style="width: 100%;height: 60px"></div>
        </div>

        <!-- 区分成品还是定制 若为成品可以立即购买 若为定制商品需要选择配托 -->
        <div class="nav_footer mui-row">
            <a href="javascript:;" class="mui-col-sm-3 mui-col-xs-3 collect">
                <span class="icon_style my-span-background"></span>
                <span>收藏</span>
            </a>
            <a href="{:url('cart/index')}" class="mui-col-sm-3 mui-col-xs-3">
                <span class="icon_style">
                    <svg class="icon" aria-hidden="true" style="vertical-align: sub; width: 24px; height: 28px;">
                        <use xlink:href="#icon-gouwuche1-copy"></use>
                    </svg>

                </span>
                <span>购物车</span>
                <span class="mui-badge mui-badge-danger my-badge">{{cartnum}}</span>
            </a>
            <a href="javascript:;" class="mui-col-sm-3 mui-col-xs-3 addcart" @click="addCar()">
                <span>加入购物车</span>
            </a>

            <a href="javascript:;" class="mui-col-sm-3 mui-col-xs-3 custom-btn" @click="xtdPeishi()">
                <span>在线配石</span>
            </a>

        </div>

        <!-- 点击配托弹出层 -->
        <div v-show="detailsShow">
            <div class="buttom_alert" @click="buttom_alert"></div>
            <div class="buttom_box peishi_box">
                <p>参数详情</p>
                <ul>
                    <li>形状</li>
                    <li>钻重</li>
                    <li>净度</li>
                    <li>颜色</li>
                    <li>价格</li>
                </ul>
                <ul v-for="(item,index) in peishiList" :class="{active:index == isActivee}" @click="selectDiamond(index)">
                    <li>{{zhushiList[isActive].luozuan_shape_name}}</li>
                    <li>{{zhushiList[isActive].luozuan_weight}}</li>
                    <li>{{item.clarity}}</li>
                    <li>{{item.color}}</li>
                    <li>{{item.price_seller.split(",").join("") * weight | keepTwoNum}}</li>
                </ul>
                <div class="nav_footer mui-row">
                    <a href="javascript:;" class="mui-col-sm-3 mui-col-xs-3 custom-btn" style="width:100%" @click="pipei()">
                        <span>确认匹配</span>
                    </a>
                </div>
            </div>
        </div>

        <!-- 当确认匹配显示所选的托和匹配到的钻 -->
        <div class="matching" v-show="isShow">
            <div class="buttom_alert" @click="buttom_alert"></div>
            <div class="queRen">
                <div class="tops">
                    <h1>匹配项目：</h1>
                    <ul class="ma-box">
                        <li>
                            <div class="fl good-img">
                                <img :src="thumb" class="w4rem" alt="">
                            </div>
                            <div class="fr good-title">
                                <p>
                                    <span>{{goodsName}}</span>
                                    <button @click="ringAgain">重选</button>
                                </p>
                                <p>{{material_name}}</p>
                                <p class="rmb">￥{{goodsPrice}}</p>
                            </div>
                            <div class="clearfix"></div>
                        </li>

                        <li>
                            <div class="fl good-img">
                                <img src="__IMG__/zuanjie.png" class="w4rem" alt="">
                            </div>
                            <div class="fr good-title">
                                <p>
                                    <span></span>
                                    <button @click="diamondAgain">重选</button>
                                </p>
                                <p>{{luozuan_shape_name}}&nbsp;{{weight}}&nbsp;{{peishiClarity}}&nbsp;{{peishiColor}}</p>
                                <p class="rmb">￥{{peishiPrice}}</p>
                            </div>
                            <div class="clearfix"></div>
                        </li>
                        <div class="clearfix"></div>
                    </ul>
                </div>
                <a class="custom-btn" @click="queRenButton">确认定制</a>
            </div>
        </div>

    </div>

</body>
<script src="__MOBILE__/js/mint-ui.js?__Version__"></script>
<script>
    /*图片懒加载*/
    Vue.use(VueLazyload, {
        preLoad: 1.3,
        error: "__IMG__/timg_01.gif",
        loading: '__IMG__/timg_01.gif',
        attempt: 1
    });

    let picker = new mui.PopPicker({
        layer: 1
    });
    picker.hide();

    // 定义过滤器
    Vue.filter('keepTwoNum', function (value) {
        value = Number(value);
        return value.toFixed(2);
    })

    let vm = new Vue({
        el: '#details',
        components: {},
        data: function () {
            return {
                number: 0,
                goods_num: 1,
                id: '',
                goodsName: '', //商品名称
                goodsPrice: '', //商品价格
                goodsCode: '', //商品编号
                goodsStockNum: '', //库存
                token: '',
                goodsAttr: [],
                zhushiList: [], // 可选主石
                caiziList: [], // 可选材质
                shoucunList: [], // 手寸
                shape: '',
                weight: '',
                isactive: 0, //材质默认选中
                thumb: '', // 缩略图
                isActive: 0, //主石默认选中
                detailsShow: false,
                peishiList: "",
                shoucunName: '',
                shoucun: '',
                goods_id: 0, //商品ID
                material_id: 0, //商品材质ID
                material_name: '',
                luozuan_ids: 0, //主石ID
                luozuan_shape_name: '',
                isActivee: -1, //主石列表排序
                peishi_id: 0,
                isShow: false,
                peishiClarity: '', //下单通配石净度
                peishiColor: '', //下单通配石颜色
                peishiPrice: '', //下单通配石价格
                type: 0, //购物车类型  1为立即购买
                goodsIdList: [], // 收藏列表
                goodsIdList01: [],
                cartnum: 0, // 购物车数据
                ifShoucun: true,
            }
        },
        created: function () {
            this.token = getToken();
            this.id = getUrlParam("id");
            var _this = this

            /*获取下单通商品详情*/
            axios.get(__apiurl2 + '/goods/getxdtinfo', {
                params: {
                    id: this.id,
                },
                headers: {
                    Aid: getAId()
                },
            }).then(function (res) {
                _this.goodsName = res.data.data.name; //商品名称
                _this.goodsPrice = res.data.data.price_seller; //商品价格
                _this.thumb = res.data.data.thumb; //商品图片
                // _this.goodsStockNum = res.data.data.stock_num; //商品库存
                _this.goodsCode = res.data.data.code; //商品编号

                _this.goodsAttr = res.data.data.GoodsXdt;
                _this.zhushiList = _this.goodsAttr.extra_goods_luozuan //下单通主石
                _this.caiziList = _this.goodsAttr.extra_goods_materials //下单通材质
                _this.shoucunList = _this.goodsAttr.extra_goods_size.values //下单通手寸
                _this.shoucunName = _this.goodsAttr.extra_goods_size.label; //手寸名称


                // 默认第一个
                _this.goods_id = res.data.data.supply_goods_id //对应的第一个商品ID
                _this.material_id = _this.goodsAttr.extra_goods_materials[0].material_id //对应的第一个材质ID
                _this.material_name = _this.goodsAttr.extra_goods_materials[0].material_name //对应的第一个材质ID
                _this.luozuan_ids = _this.goodsAttr.extra_goods_luozuan[0].associate_luozuan_id //对应的第一个主石ID
                _this.luozuan_shape_name = _this.goodsAttr.extra_goods_luozuan[0].luozuan_shape_name //对应的第一个主石ID
                _this.weight = _this.zhushiList[0].luozuan_weight //对应的第一个主石钻重ID
                // 默认显示第一个手寸,并且判断是否有手寸
                if (_this.shoucunList.length != 0) {
                    var obj = [];
                    for (var i in _this.shoucunList) {
                        var tmp = {
                            value: _this.shoucunList[i],
                            text: _this.shoucunList[i]
                        };
                        obj.push(tmp);
                    }
                    _this.shoucun = obj[0].value;

                    picker.setData(obj)
                } else {
                    _this.ifShoucun = false;
                }

                _this.getxdtprice();

            })

            // 收藏
            axios({
                method: 'POST',
                url: __apiurl + '/user/getUserGoodsCollectionList',
                headers: {
                    Accept: "application/json; charset=utf-8",
                    Token: this.token
                },
            }).then(res => {
                var _this = this;
                this.goodsIdList = res.data.data.data;

                console.log(this.goodsIdList)
                var newarray = [];
                for (var i in this.goodsIdList) {
                    newarray = this.goodsIdList[i].goods_id;
                    _this.goodsIdList01.push(newarray);
                }
                if (in_array(_this.id, _this.goodsIdList01)) { //判断this.id是否在数组中
                    $('.my-span-background').addClass('active');
                }
            }).catch(error => {
                mui.alert(error)
            })

            //购物车数据  只取购物车总数
            axios({
                method: 'GET',
                url: __apiurl2 + '/cart/index',
                headers: {
                    Accept: "application/json; charset=utf-8",
                    Token: this.token
                },
                headers: {
                    Aid: getAId()
                },
            }).then(res => {
                if (res.data.status == 100) {
                    this.cartnum = res.data.data.total_num;
                }
            }).catch(error => {
                mui.alert(error)
            })
        },
        methods: {
            liListClick: function (index) {
                this.isactive = index;
                this.material_id = this.caiziList[index].material_id //根据所选材质来决定商品
                this.material_name = this.caiziList[index].material_name
                this.getxdtprice();
                // console.log(this.caiziList)
            },
            changeshape: function (index) {
                this.isActive = index;
                this.getxdtprice();
                this.luozuan_ids = this.zhushiList[index].associate_luozuan_id //根据所选主石来决定主石
                this.luozuan_shape_name = this.zhushiList[index].luozuan_shape_name //根据所选主石来决定主石名称
                this.weight = this.zhushiList[index].luozuan_weight //根据所选主石来决定主石重量
                this.getxdtprice();
            },

            buttom_alert: function () {
                this.detailsShow = false;
                this.isShow = false;
            },

            // 点击手寸，弹出picker选择器
            showShouCun: function () {
                picker.show(function (SelectedItem) {
                    vm.shoucun = SelectedItem[0].text;
                })
            },

            // 获取sku
            getxdtprice: function () {
                var _this = this
                axios.get(__apiurl2 + '/goods/getxdtprice', {
                    params: {
                        goods_id: _this.goods_id,
                        material_id: _this.material_id,
                        luozuan_ids: _this.luozuan_ids
                    },
                    headers: {
                        Aid: getAId()
                    },
                }).then(function (res) {

                    if (res.data.status == 100) {
                        _this.goodsPrice = res.data.data.price_seller //获取sku的价格
                    }
                }).catch(function (error) {
                    mui.alert(error)
                })

            },

            // 数量加减
            pro_num_jian() {
                this.goods_num--;
                if (this.goods_num < 1) {
                    this.goods_num = 1
                }
            },

            pro_num_jia() {
                this.goods_num++;
            },



            // 下单通在线配石
            xtdPeishi: function () {
                var that = this;
                that.detailsShow = false
                axios({
                    url: __apiurl2 + '/goods/getxdtmatch',
                    method: "get",
                    params: {
                        weight: that.weight
                    },
                    headers: {
                        Aid: getAId()
                    },
                }).then(function (res) {
                    if (res.data.status == 100) {
                        that.detailsShow = true;
                        that.peishiList = res.data.data;
                        console.log(that.peishiList)
                        // 默认第一个配石
                        this.peishiClarity = that.peishiList[0].clarity //下单通配石净度
                        this.peishiColor = that.peishiList[0].color //下单通配石颜色
                        this.peishiPrice = that.peishiList[0].price_seller //下单通配石价格
                    } else {
                        mui.alert("没有可匹配主石")
                    }
                })
            },
            // 在线配石
            selectDiamond: function (index) {
                var _this = this
                _this.isActivee = index;
                _this.peishi_id = this.peishiList[index].id;
                _this.peishiClarity = this.peishiList[index].clarity //下单通配石净度
                _this.peishiColor = this.peishiList[index].color //下单通配石颜色
                _this.peishiPrice = this.peishiList[index].price_seller.split(",").join("") * this.weight //下单通配石价格
                console.log(_this.peishiPrice)

            },
            // 确认匹配
            pipei: function () {
                this.detailsShow = false;
                this.isShow = true;
            },
            // 戒指重选
            ringAgain: function () {
                history.go(-1);
            },
            // 钻石重选
            diamondAgain: function () {
                if (this.peishi_id = null) {
                    window.location.href = "{:url('Goods/diamond')}";
                } else {
                    this.detailsShow = true;
                    this.isShow = false;
                }
            },
            // 确认定制后提交到购物车
            queRenButton: function () {
                var that = this
                that.stone_name = this.luozuan_shape_name + this.weight
                console.log(that.stone_name)
                axios({
                    url: __apiurl2 + '/cart/xdtaddcart',
                    headers: {
                        Accept: "application/json; charset=utf-8",
                        Token: that.token,
                        Aid: getAId()
                    },
                    method: "POST",
                    data: {
                        hand_name: that.shoucunName,
                        hand: that.shoucun,
                        goods_num: that.goods_num,
                        goods_id: that.id,
                        stone_id: that.luozuan_ids,
                        stone_name: that.stone_name,
                        material_id: that.material_id,
                        material_name: that.material_name,
                        matched_diamond_id: that.peishi_id,
                        jt_price: that.goodsPrice,
                        zs_price: that.peishiPrice,
                        color: that.peishiColor,
                        clarity: that.peishiClarity,
                        type: that.type
                    }
                }).then(function (res) {
                    mui.alert(res.data.msg);
                    if (res.data.status == 100) {
                        window.location.href = "{:url('cart/index')}";
                    } 
                })
            },

            // 加入购物车
            addCar: function () {
                if (this.detailsShow = true) {
                    mui.alert("请选择配石")
                    this.detailsShow = false;
                }
            },

            //收藏按钮
            collect() {
                if ($('.my-span-background').hasClass('active')) {
                    axios({
                        method: 'POST',
                        url: __apiurl + '/user/delusergoodscollection',
                        headers: {
                            Accept: "application/json; charset=utf-8",
                            Token: this.token
                        },
                        data: {
                            goods_id: this.id
                        }
                    }).then(res => {
                        if (res.data.status == 100) {
                            mui.alert(res.data.msg, function () {
                                $('.my-span-background').removeClass('active');
                            })
                        }
                    }).catch(error => {
                        console.log(error)
                    })
                } else {
                    axios({
                        method: 'POST',
                        url: __apiurl + '/user/addusergoodscollection',
                        headers: {
                            Accept: "application/json; charset=utf-8",
                            Token: this.token
                        },
                        data: {
                            goods_id: this.id
                        }
                    }).then(res => {
                        if (res.data.status == 100) {
                            mui.alert(res.data.msg, function () {
                                $('.my-span-background').addClass('active');
                            })
                        }
                        console.log(res)
                    }).catch(error => {
                        console.log(error)
                    })
                }

            },

        }
    });

    $('.collect').click(function () {
        vm.collect();
    });
    //判断是否在数组里面
    function in_array(search, array) {
        for (var i in array) {
            if (array[i] == search) {
                return true;
            }
        }
        return false;
    }
</script>

</html>