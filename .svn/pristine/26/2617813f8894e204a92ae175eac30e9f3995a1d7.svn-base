<!DOCTYPE html>
<html>

<head>
    {include file="public/base" /}
</head>

<body>
<div id="app">
    <header class="mui-bar mui-bar-nav">
        <a class="mui-action-back mui-icon mui-icon-left-nav mui-pull-left"></a>
        <h1 class="mui-title"  v-if="goods_type == 3">珠宝成品</h1>
        <h1 class="mui-title" v-if="goods_type == 4">定制商品</h1>
        <h1 class="mui-title" v-if="goods_type == 5">精品定制</h1>
    </header>
    <div class="mui-content">
        <div class="goods_list_title clear">
            <a @click="priceclick" :class="{active:backgroundStyle}">按价格</a>
            <a @click="timeclick" :class="{active:backgroundStyle01}">按时间</a>
            <a @click="alertBox">筛选</a>
        </div>

        <!--侧边弹出框-->
        <div class="w_mask" v-show="ok" @click="displayNone">
        </div>
        <div class="none_box" v-show="ok">
            <div class="wrap_box">
                <div v-for="(item,index) in getsAttr">
                    <p>{{item.name}}</p>
                    <ul class="clear">
                        <li v-for="tab in getsAttr[index].sub"
                            :class="{active:tab.select}"
                            :value="tab.id"
                            :data-val="item.id"
                            @click="attrListClick(tab,item)">
                            {{tab.name}}
                        </li>
                    </ul>
                </div>
                <div class="btn_02">
                    <button @click="reset">重置</button>
                    <button @click="addSubmit">确定</button>
                </div>
            </div>
        </div>
        <!--中间商品列表-->
        <div class="goods_all_list">
            <ul class="clear">
                <li v-for="item in productList">
                    <div @click="godetail(item)">
                        <div class="wrap_img">
                            <img v-lazy="item.thumb" alt="">
                        </div>
                        <div class="wrap_text">
                            <p id="aaa">{{item.name}}</p>
                            <p>￥<span class="price">{{parseFloat(item.price) | formatMoney }}</span></p>
                        </div>
                    </div>
                </li>
            </ul>
        </div>

        <div style="width: 100%;height: 60px"></div>

    </div>
</div>


{include file="public/nav" /}
</body>
<script>
    Vue.use(VueLazyload, {
        preLoad: 1.3,
        error: "错误",
        loading: '',
        attempt: 1
    });
    var vum = new Vue({
        el: '#app',
        data: {
            backgroundStyle: false,
            backgroundStyle01: false,
            productList: [],
            ok: false,
            newArr: [],
            id: '',
            getsAttr: [],
            isShow: false,
            attrObj: [],
            itemIds: [],
            goods_type:''
        },
        computed: {},
        filters: {
            formatMoney(value) {
                return value.toFixed(2);
            }
        },
        created() {

        },
        mounted() {
            this.$nextTick(function () {
                this.goodsViwe();
            });
            this.id = getUrlParam("category_id");
            this.goods_type = getUrlParam("goods_type");
        },
        methods: {
            goodsViwe() {
                let _this = this;
                axios.get(__apiurl + '/goods/index', {
                    params: {
                        category_id: _this.id,
                        goods_type: _this.goods_type
                    }
                }).then(response => {
                    _this.productList = response.data.data;
                }).catch(error => {
                    mui.alert(error);
                })
            },

            //按价格排序
            priceclick() {
                let _this = this;
                _this.backgroundStyle = !_this.backgroundStyle;
                if (_this.backgroundStyle) {
                    axios.get(__apiurl + '/goods/index', {
                        params: {
                            category_id: _this.id,
                            goods_type: _this.goods_type,
                            orderby: "price desc"                           
                        }
                    }).then(response => {
                        _this.productList = response.data.data;
                    }).catch(error => {
                        mui.alert(error);
                    })
                }
                if (_this.backgroundStyle == false) {
                    axios.get(__apiurl + '/goods/index', {
                        params: {
                            category_id: _this.id,
                            goods_type: _this.goods_type,
                            orderby: "price asc"
                        }
                    }).then(response => {
                        _this.productList = response.data.data;
                    }).catch(error => {
                        mui.alert(error);
                    })
                }
            },
            //按时间排序
            timeclick() {
                let _this = this;
                _this.backgroundStyle01 = !_this.backgroundStyle01;
                if (_this.backgroundStyle01) {
                    axios.get(__apiurl + '/goods/index', {
                        params: {
                            category_id: _this.id,
                            goods_type: _this.goods_type,
                            orderby: "create_time desc"
                        }
                    }).then(response => {
                        _this.productList = response.data.data;

                    })
                        .catch(error => {
                            mui.alert(error);
                        })
                }
                if (_this.backgroundStyle01 == false) {
                    axios.get(__apiurl + '/goods/index', {
                        params: {
                            category_id: _this.id,
                            goods_type: _this.goods_type,
                            orderby: "create_time asc"
                        }
                    }).then(response => {
                        _this.productList = response.data.data;
                    })
                        .catch(error => {
                            mui.alert(error);
                        })
                }

            },
            //弹出筛选条件
            alertBox() {
                let _this = this;
                this.ok = true;
                axios.get(__apiurl + '/goods/getattrsbycat', {
                    params: {
                        category_id: _this.id,
                        goods_type: _this.goods_type,
                    }
                }).then(res => {
                    _this.getsAttr = res.data.data;
                }).catch(error => {
                    mui.alert(error)
                })
            },
            displayNone() {
                this.ok = false;
            },
            //单个属性的点击事件
            attrListClick(tab, item) {
                if (typeof tab.select == 'undefined') {
                    // Vue.set(item, "checked", true);  //全局设置
                    this.$set(tab, "select", true);     //本循环设置
                    // tab.id item.id
                    if (this.itemIds.indexOf(item.id) == -1) { //判断父id是否在父元素数组里面
                        this.itemIds.push(item.id);
                        var str = [];
                        str[item.id] = ',' + tab.id;
                        this.attrObj.push(str);
                    } else {
                        for (var index in this.attrObj) { //遍历父元素数组
                            for (var i in this.attrObj[index]) {
                                if (item.id == i) {
                                    if (tab.id != this.attrObj[index][i]) {
                                        this.attrObj[index][i] = this.attrObj[index][i] + ',' + tab.id;
                                    }
                                }
                            }
                        }
                    }
                } else {
                    tab.select = !tab.select;
                    for (var index in this.attrObj) {
                        for (var i in this.attrObj[index]) {
                            if (item.id == i) {
                                var tmp = this.attrObj[index][i].replace("," + tab.id, "");
                                if (tmp) {
                                    this.attrObj[index][i] = tmp;
                                } else {
                                    // delete this.attrObj[index];
                                    var temp = [];
                                    temp[papval] = '';
                                    this.attrObj[index] = temp;
                                }
                            }
                        }
                    }
                }
            }
            ,
            //确定
            addSubmit() {
                var str = '';
                for (var index in this.attrObj) {
                    for (var i in this.attrObj[index]) {
                        var tmp = this.attrObj[index][i].substr(1);
                        if (tmp) {
                            str += i + ':' + tmp + ';';
                        }
                    }
                }
                if (!str) {
                    mui.alert('未选择数据');
                    return false;
                }
                axios.get(__apiurl + '/goods/index', {
                    params: {
                        category_id: this.id,
                        goods_attr_filter: str
                    }
                }).then(res => {
                    if (res.status == 200) {
                        this.productList = res.data.data;
                    }
                }).catch(error => {
                    mui.alert(error)
                });
                this.ok = false;
            },
            //重置
            reset() {
                $('li').each(function (i, el) {
                    if ($(el).hasClass('active')) {
                        $(el).removeClass('active');
                    }
                    vum.itemIds = [];
                    vum.attrObj = [];
                })
            },
            godetail(item) {
                if (item.type == 4 && item.supply_goods_id > 0) {
                    window.location.href = 'xdtdetails.html?id='+item.id;
                } else {
                    window.location.href = 'details.html?id='+item.id;
                }
                    // <a :href="'details.html?id='+item.id">
            }
        }
    })

</script>
</html>